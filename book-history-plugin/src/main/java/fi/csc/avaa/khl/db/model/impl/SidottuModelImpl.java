package fi.csc.avaa.khl.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.khl.db.model.Sidottu;
import fi.csc.avaa.khl.db.model.SidottuModel;
import fi.csc.avaa.khl.db.model.SidottuSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Sidottu service. Represents a row in the &quot;sidottu&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.khl.db.model.SidottuModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SidottuImpl}.
 * </p>
 *
 * @author CSC
 * @see SidottuImpl
 * @see fi.csc.avaa.khl.db.model.Sidottu
 * @see fi.csc.avaa.khl.db.model.SidottuModel
 * @generated
 */
@JSON(strict = true)
public class SidottuModelImpl extends BaseModelImpl<Sidottu>
    implements SidottuModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a sidottu model instance should use the {@link fi.csc.avaa.khl.db.model.Sidottu} interface instead.
     */
    public static final String TABLE_NAME = "sidottu";
    public static final Object[][] TABLE_COLUMNS = {
            { "sidontaid", Types.INTEGER },
            { "sidonta", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table sidottu (sidontaid INTEGER not null primary key,sidonta VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table sidottu";
    public static final String ORDER_BY_JPQL = " ORDER BY sidottu.sidontaid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY sidottu.sidontaid ASC";
    public static final String DATA_SOURCE = "khl";
    public static final String SESSION_FACTORY = "khlSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.khl.db.model.Sidottu"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.khl.db.model.Sidottu"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.fi.csc.avaa.khl.db.model.Sidottu"),
            true);
    public static long SIDONTA_COLUMN_BITMASK = 1L;
    public static long SIDONTAID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.khl.db.model.Sidottu"));
    private static ClassLoader _classLoader = Sidottu.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Sidottu.class
        };
    private int _sidontaid;
    private String _sidonta;
    private String _originalSidonta;
    private long _columnBitmask;
    private Sidottu _escapedModel;

    public SidottuModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Sidottu toModel(SidottuSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Sidottu model = new SidottuImpl();

        model.setSidontaid(soapModel.getSidontaid());
        model.setSidonta(soapModel.getSidonta());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Sidottu> toModels(SidottuSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Sidottu> models = new ArrayList<Sidottu>(soapModels.length);

        for (SidottuSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _sidontaid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setSidontaid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _sidontaid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Sidottu.class;
    }

    @Override
    public String getModelClassName() {
        return Sidottu.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("sidontaid", getSidontaid());
        attributes.put("sidonta", getSidonta());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer sidontaid = (Integer) attributes.get("sidontaid");

        if (sidontaid != null) {
            setSidontaid(sidontaid);
        }

        String sidonta = (String) attributes.get("sidonta");

        if (sidonta != null) {
            setSidonta(sidonta);
        }
    }

    @JSON
    @Override
    public int getSidontaid() {
        return _sidontaid;
    }

    @Override
    public void setSidontaid(int sidontaid) {
        _sidontaid = sidontaid;
    }

    @JSON
    @Override
    public String getSidonta() {
        if (_sidonta == null) {
            return StringPool.BLANK;
        } else {
            return _sidonta;
        }
    }

    @Override
    public void setSidonta(String sidonta) {
        _columnBitmask |= SIDONTA_COLUMN_BITMASK;

        if (_originalSidonta == null) {
            _originalSidonta = _sidonta;
        }

        _sidonta = sidonta;
    }

    public String getOriginalSidonta() {
        return GetterUtil.getString(_originalSidonta);
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public Sidottu toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Sidottu) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        SidottuImpl sidottuImpl = new SidottuImpl();

        sidottuImpl.setSidontaid(getSidontaid());
        sidottuImpl.setSidonta(getSidonta());

        sidottuImpl.resetOriginalValues();

        return sidottuImpl;
    }

    @Override
    public int compareTo(Sidottu sidottu) {
        int primaryKey = sidottu.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Sidottu)) {
            return false;
        }

        Sidottu sidottu = (Sidottu) obj;

        int primaryKey = sidottu.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        SidottuModelImpl sidottuModelImpl = this;

        sidottuModelImpl._originalSidonta = sidottuModelImpl._sidonta;

        sidottuModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Sidottu> toCacheModel() {
        SidottuCacheModel sidottuCacheModel = new SidottuCacheModel();

        sidottuCacheModel.sidontaid = getSidontaid();

        sidottuCacheModel.sidonta = getSidonta();

        String sidonta = sidottuCacheModel.sidonta;

        if ((sidonta != null) && (sidonta.length() == 0)) {
            sidottuCacheModel.sidonta = null;
        }

        return sidottuCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{sidontaid=");
        sb.append(getSidontaid());
        sb.append(", sidonta=");
        sb.append(getSidonta());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.khl.db.model.Sidottu");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>sidontaid</column-name><column-value><![CDATA[");
        sb.append(getSidontaid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sidonta</column-name><column-value><![CDATA[");
        sb.append(getSidonta());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
