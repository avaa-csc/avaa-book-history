package fi.csc.avaa.khl.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.khl.db.model.Vanhatkirjat;
import fi.csc.avaa.khl.db.model.VanhatkirjatModel;
import fi.csc.avaa.khl.db.model.VanhatkirjatSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Vanhatkirjat service. Represents a row in the &quot;vanhatkirjat&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.khl.db.model.VanhatkirjatModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VanhatkirjatImpl}.
 * </p>
 *
 * @author CSC
 * @see VanhatkirjatImpl
 * @see fi.csc.avaa.khl.db.model.Vanhatkirjat
 * @see fi.csc.avaa.khl.db.model.VanhatkirjatModel
 * @generated
 */
@JSON(strict = true)
public class VanhatkirjatModelImpl extends BaseModelImpl<Vanhatkirjat>
    implements VanhatkirjatModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a vanhatkirjat model instance should use the {@link fi.csc.avaa.khl.db.model.Vanhatkirjat} interface instead.
     */
    public static final String TABLE_NAME = "vanhatkirjat";
    public static final Object[][] TABLE_COLUMNS = {
            { "vkid", Types.INTEGER },
            { "kuntaid", Types.INTEGER },
            { "maakuntaid", Types.INTEGER },
            { "lomakenum", Types.INTEGER },
            { "paivays", Types.TIMESTAMP },
            { "kartkohde", Types.INTEGER },
            { "tekija", Types.VARCHAR },
            { "teoknimi", Types.VARCHAR },
            { "painovuosi", Types.INTEGER },
            { "painopaikka", Types.VARCHAR },
            { "kirjapaino", Types.VARCHAR },
            { "painosmerk", Types.INTEGER },
            { "imprimatur", Types.INTEGER },
            { "kuvitus", Types.INTEGER },
            { "kartat", Types.INTEGER },
            { "liitteita", Types.INTEGER },
            { "nimikirj", Types.VARCHAR },
            { "sinetti", Types.INTEGER },
            { "leima", Types.INTEGER },
            { "exlibris", Types.INTEGER },
            { "hintamerk", Types.INTEGER },
            { "omiste", Types.VARCHAR },
            { "reunamerk", Types.VARCHAR },
            { "lisatieto", Types.VARCHAR },
            { "lahosoite", Types.VARCHAR },
            { "lahemail", Types.VARCHAR },
            { "status", Types.INTEGER },
            { "kieliid", Types.INTEGER },
            { "kielestaid", Types.INTEGER },
            { "julklajiid", Types.INTEGER },
            { "kuntoid", Types.INTEGER },
            { "puuteid", Types.INTEGER },
            { "teospkid", Types.INTEGER },
            { "sidonta", Types.INTEGER },
            { "kokoelma", Types.VARCHAR },
            { "poistettu", Types.TIMESTAMP },
            { "muokattu", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table vanhatkirjat (vkid INTEGER not null primary key,kuntaid INTEGER,maakuntaid INTEGER,lomakenum INTEGER,paivays DATE null,kartkohde INTEGER,tekija VARCHAR(75) null,teoknimi VARCHAR(75) null,painovuosi INTEGER,painopaikka VARCHAR(75) null,kirjapaino VARCHAR(75) null,painosmerk INTEGER,imprimatur INTEGER,kuvitus INTEGER,kartat INTEGER,liitteita INTEGER,nimikirj VARCHAR(75) null,sinetti INTEGER,leima INTEGER,exlibris INTEGER,hintamerk INTEGER,omiste VARCHAR(75) null,reunamerk VARCHAR(75) null,lisatieto VARCHAR(75) null,lahosoite VARCHAR(75) null,lahemail VARCHAR(75) null,status INTEGER,kieliid INTEGER,kielestaid INTEGER,julklajiid INTEGER,kuntoid INTEGER,puuteid INTEGER,teospkid INTEGER,sidonta INTEGER,kokoelma VARCHAR(75) null,poistettu DATE null,muokattu DATE null)";
    public static final String TABLE_SQL_DROP = "drop table vanhatkirjat";
    public static final String ORDER_BY_JPQL = " ORDER BY vanhatkirjat.vkid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY vanhatkirjat.vkid ASC";
    public static final String DATA_SOURCE = "khl";
    public static final String SESSION_FACTORY = "khlSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.khl.db.model.Vanhatkirjat"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.khl.db.model.Vanhatkirjat"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.fi.csc.avaa.khl.db.model.Vanhatkirjat"),
            true);
    public static long STATUS_COLUMN_BITMASK = 1L;
    public static long TEKIJA_COLUMN_BITMASK = 2L;
    public static long TEOKNIMI_COLUMN_BITMASK = 4L;
    public static long VKID_COLUMN_BITMASK = 8L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.khl.db.model.Vanhatkirjat"));
    private static ClassLoader _classLoader = Vanhatkirjat.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Vanhatkirjat.class
        };
    private int _vkid;
    private int _kuntaid;
    private int _maakuntaid;
    private int _lomakenum;
    private Date _paivays;
    private int _kartkohde;
    private String _tekija;
    private String _originalTekija;
    private String _teoknimi;
    private String _originalTeoknimi;
    private int _painovuosi;
    private String _painopaikka;
    private String _kirjapaino;
    private int _painosmerk;
    private int _imprimatur;
    private int _kuvitus;
    private int _kartat;
    private int _liitteita;
    private String _nimikirj;
    private int _sinetti;
    private int _leima;
    private int _exlibris;
    private int _hintamerk;
    private String _omiste;
    private String _reunamerk;
    private String _lisatieto;
    private String _lahosoite;
    private String _lahemail;
    private int _status;
    private int _originalStatus;
    private boolean _setOriginalStatus;
    private int _kieliid;
    private int _kielestaid;
    private int _julklajiid;
    private int _kuntoid;
    private int _puuteid;
    private int _teospkid;
    private int _sidonta;
    private String _kokoelma;
    private Date _poistettu;
    private Date _muokattu;
    private long _columnBitmask;
    private Vanhatkirjat _escapedModel;

    public VanhatkirjatModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Vanhatkirjat toModel(VanhatkirjatSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Vanhatkirjat model = new VanhatkirjatImpl();

        model.setVkid(soapModel.getVkid());
        model.setKuntaid(soapModel.getKuntaid());
        model.setMaakuntaid(soapModel.getMaakuntaid());
        model.setLomakenum(soapModel.getLomakenum());
        model.setPaivays(soapModel.getPaivays());
        model.setKartkohde(soapModel.getKartkohde());
        model.setTekija(soapModel.getTekija());
        model.setTeoknimi(soapModel.getTeoknimi());
        model.setPainovuosi(soapModel.getPainovuosi());
        model.setPainopaikka(soapModel.getPainopaikka());
        model.setKirjapaino(soapModel.getKirjapaino());
        model.setPainosmerk(soapModel.getPainosmerk());
        model.setImprimatur(soapModel.getImprimatur());
        model.setKuvitus(soapModel.getKuvitus());
        model.setKartat(soapModel.getKartat());
        model.setLiitteita(soapModel.getLiitteita());
        model.setNimikirj(soapModel.getNimikirj());
        model.setSinetti(soapModel.getSinetti());
        model.setLeima(soapModel.getLeima());
        model.setExlibris(soapModel.getExlibris());
        model.setHintamerk(soapModel.getHintamerk());
        model.setOmiste(soapModel.getOmiste());
        model.setReunamerk(soapModel.getReunamerk());
        model.setLisatieto(soapModel.getLisatieto());
        model.setLahosoite(soapModel.getLahosoite());
        model.setLahemail(soapModel.getLahemail());
        model.setStatus(soapModel.getStatus());
        model.setKieliid(soapModel.getKieliid());
        model.setKielestaid(soapModel.getKielestaid());
        model.setJulklajiid(soapModel.getJulklajiid());
        model.setKuntoid(soapModel.getKuntoid());
        model.setPuuteid(soapModel.getPuuteid());
        model.setTeospkid(soapModel.getTeospkid());
        model.setSidonta(soapModel.getSidonta());
        model.setKokoelma(soapModel.getKokoelma());
        model.setPoistettu(soapModel.getPoistettu());
        model.setMuokattu(soapModel.getMuokattu());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Vanhatkirjat> toModels(VanhatkirjatSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Vanhatkirjat> models = new ArrayList<Vanhatkirjat>(soapModels.length);

        for (VanhatkirjatSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _vkid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setVkid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _vkid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Vanhatkirjat.class;
    }

    @Override
    public String getModelClassName() {
        return Vanhatkirjat.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("vkid", getVkid());
        attributes.put("kuntaid", getKuntaid());
        attributes.put("maakuntaid", getMaakuntaid());
        attributes.put("lomakenum", getLomakenum());
        attributes.put("paivays", getPaivays());
        attributes.put("kartkohde", getKartkohde());
        attributes.put("tekija", getTekija());
        attributes.put("teoknimi", getTeoknimi());
        attributes.put("painovuosi", getPainovuosi());
        attributes.put("painopaikka", getPainopaikka());
        attributes.put("kirjapaino", getKirjapaino());
        attributes.put("painosmerk", getPainosmerk());
        attributes.put("imprimatur", getImprimatur());
        attributes.put("kuvitus", getKuvitus());
        attributes.put("kartat", getKartat());
        attributes.put("liitteita", getLiitteita());
        attributes.put("nimikirj", getNimikirj());
        attributes.put("sinetti", getSinetti());
        attributes.put("leima", getLeima());
        attributes.put("exlibris", getExlibris());
        attributes.put("hintamerk", getHintamerk());
        attributes.put("omiste", getOmiste());
        attributes.put("reunamerk", getReunamerk());
        attributes.put("lisatieto", getLisatieto());
        attributes.put("lahosoite", getLahosoite());
        attributes.put("lahemail", getLahemail());
        attributes.put("status", getStatus());
        attributes.put("kieliid", getKieliid());
        attributes.put("kielestaid", getKielestaid());
        attributes.put("julklajiid", getJulklajiid());
        attributes.put("kuntoid", getKuntoid());
        attributes.put("puuteid", getPuuteid());
        attributes.put("teospkid", getTeospkid());
        attributes.put("sidonta", getSidonta());
        attributes.put("kokoelma", getKokoelma());
        attributes.put("poistettu", getPoistettu());
        attributes.put("muokattu", getMuokattu());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer vkid = (Integer) attributes.get("vkid");

        if (vkid != null) {
            setVkid(vkid);
        }

        Integer kuntaid = (Integer) attributes.get("kuntaid");

        if (kuntaid != null) {
            setKuntaid(kuntaid);
        }

        Integer maakuntaid = (Integer) attributes.get("maakuntaid");

        if (maakuntaid != null) {
            setMaakuntaid(maakuntaid);
        }

        Integer lomakenum = (Integer) attributes.get("lomakenum");

        if (lomakenum != null) {
            setLomakenum(lomakenum);
        }

        Date paivays = (Date) attributes.get("paivays");

        if (paivays != null) {
            setPaivays(paivays);
        }

        Integer kartkohde = (Integer) attributes.get("kartkohde");

        if (kartkohde != null) {
            setKartkohde(kartkohde);
        }

        String tekija = (String) attributes.get("tekija");

        if (tekija != null) {
            setTekija(tekija);
        }

        String teoknimi = (String) attributes.get("teoknimi");

        if (teoknimi != null) {
            setTeoknimi(teoknimi);
        }

        Integer painovuosi = (Integer) attributes.get("painovuosi");

        if (painovuosi != null) {
            setPainovuosi(painovuosi);
        }

        String painopaikka = (String) attributes.get("painopaikka");

        if (painopaikka != null) {
            setPainopaikka(painopaikka);
        }

        String kirjapaino = (String) attributes.get("kirjapaino");

        if (kirjapaino != null) {
            setKirjapaino(kirjapaino);
        }

        Integer painosmerk = (Integer) attributes.get("painosmerk");

        if (painosmerk != null) {
            setPainosmerk(painosmerk);
        }

        Integer imprimatur = (Integer) attributes.get("imprimatur");

        if (imprimatur != null) {
            setImprimatur(imprimatur);
        }

        Integer kuvitus = (Integer) attributes.get("kuvitus");

        if (kuvitus != null) {
            setKuvitus(kuvitus);
        }

        Integer kartat = (Integer) attributes.get("kartat");

        if (kartat != null) {
            setKartat(kartat);
        }

        Integer liitteita = (Integer) attributes.get("liitteita");

        if (liitteita != null) {
            setLiitteita(liitteita);
        }

        String nimikirj = (String) attributes.get("nimikirj");

        if (nimikirj != null) {
            setNimikirj(nimikirj);
        }

        Integer sinetti = (Integer) attributes.get("sinetti");

        if (sinetti != null) {
            setSinetti(sinetti);
        }

        Integer leima = (Integer) attributes.get("leima");

        if (leima != null) {
            setLeima(leima);
        }

        Integer exlibris = (Integer) attributes.get("exlibris");

        if (exlibris != null) {
            setExlibris(exlibris);
        }

        Integer hintamerk = (Integer) attributes.get("hintamerk");

        if (hintamerk != null) {
            setHintamerk(hintamerk);
        }

        String omiste = (String) attributes.get("omiste");

        if (omiste != null) {
            setOmiste(omiste);
        }

        String reunamerk = (String) attributes.get("reunamerk");

        if (reunamerk != null) {
            setReunamerk(reunamerk);
        }

        String lisatieto = (String) attributes.get("lisatieto");

        if (lisatieto != null) {
            setLisatieto(lisatieto);
        }

        String lahosoite = (String) attributes.get("lahosoite");

        if (lahosoite != null) {
            setLahosoite(lahosoite);
        }

        String lahemail = (String) attributes.get("lahemail");

        if (lahemail != null) {
            setLahemail(lahemail);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        Integer kieliid = (Integer) attributes.get("kieliid");

        if (kieliid != null) {
            setKieliid(kieliid);
        }

        Integer kielestaid = (Integer) attributes.get("kielestaid");

        if (kielestaid != null) {
            setKielestaid(kielestaid);
        }

        Integer julklajiid = (Integer) attributes.get("julklajiid");

        if (julklajiid != null) {
            setJulklajiid(julklajiid);
        }

        Integer kuntoid = (Integer) attributes.get("kuntoid");

        if (kuntoid != null) {
            setKuntoid(kuntoid);
        }

        Integer puuteid = (Integer) attributes.get("puuteid");

        if (puuteid != null) {
            setPuuteid(puuteid);
        }

        Integer teospkid = (Integer) attributes.get("teospkid");

        if (teospkid != null) {
            setTeospkid(teospkid);
        }

        Integer sidonta = (Integer) attributes.get("sidonta");

        if (sidonta != null) {
            setSidonta(sidonta);
        }

        String kokoelma = (String) attributes.get("kokoelma");

        if (kokoelma != null) {
            setKokoelma(kokoelma);
        }

        Date poistettu = (Date) attributes.get("poistettu");

        if (poistettu != null) {
            setPoistettu(poistettu);
        }

        Date muokattu = (Date) attributes.get("muokattu");

        if (muokattu != null) {
            setMuokattu(muokattu);
        }
    }

    @JSON
    @Override
    public int getVkid() {
        return _vkid;
    }

    @Override
    public void setVkid(int vkid) {
        _vkid = vkid;
    }

    @JSON
    @Override
    public int getKuntaid() {
        return _kuntaid;
    }

    @Override
    public void setKuntaid(int kuntaid) {
        _kuntaid = kuntaid;
    }

    @JSON
    @Override
    public int getMaakuntaid() {
        return _maakuntaid;
    }

    @Override
    public void setMaakuntaid(int maakuntaid) {
        _maakuntaid = maakuntaid;
    }

    @JSON
    @Override
    public int getLomakenum() {
        return _lomakenum;
    }

    @Override
    public void setLomakenum(int lomakenum) {
        _lomakenum = lomakenum;
    }

    @JSON
    @Override
    public Date getPaivays() {
        return _paivays;
    }

    @Override
    public void setPaivays(Date paivays) {
        _paivays = paivays;
    }

    @JSON
    @Override
    public int getKartkohde() {
        return _kartkohde;
    }

    @Override
    public void setKartkohde(int kartkohde) {
        _kartkohde = kartkohde;
    }

    @JSON
    @Override
    public String getTekija() {
        if (_tekija == null) {
            return StringPool.BLANK;
        } else {
            return _tekija;
        }
    }

    @Override
    public void setTekija(String tekija) {
        _columnBitmask |= TEKIJA_COLUMN_BITMASK;

        if (_originalTekija == null) {
            _originalTekija = _tekija;
        }

        _tekija = tekija;
    }

    public String getOriginalTekija() {
        return GetterUtil.getString(_originalTekija);
    }

    @JSON
    @Override
    public String getTeoknimi() {
        if (_teoknimi == null) {
            return StringPool.BLANK;
        } else {
            return _teoknimi;
        }
    }

    @Override
    public void setTeoknimi(String teoknimi) {
        _columnBitmask |= TEOKNIMI_COLUMN_BITMASK;

        if (_originalTeoknimi == null) {
            _originalTeoknimi = _teoknimi;
        }

        _teoknimi = teoknimi;
    }

    public String getOriginalTeoknimi() {
        return GetterUtil.getString(_originalTeoknimi);
    }

    @JSON
    @Override
    public int getPainovuosi() {
        return _painovuosi;
    }

    @Override
    public void setPainovuosi(int painovuosi) {
        _painovuosi = painovuosi;
    }

    @JSON
    @Override
    public String getPainopaikka() {
        if (_painopaikka == null) {
            return StringPool.BLANK;
        } else {
            return _painopaikka;
        }
    }

    @Override
    public void setPainopaikka(String painopaikka) {
        _painopaikka = painopaikka;
    }

    @JSON
    @Override
    public String getKirjapaino() {
        return _kirjapaino;
    }

    @Override
    public void setKirjapaino(String kirjapaino) {
        _kirjapaino = kirjapaino;
    }

    @JSON
    @Override
    public int getPainosmerk() {
        return _painosmerk;
    }

    @Override
    public void setPainosmerk(int painosmerk) {
        _painosmerk = painosmerk;
    }

    @JSON
    @Override
    public int getImprimatur() {
        return _imprimatur;
    }

    @Override
    public void setImprimatur(int imprimatur) {
        _imprimatur = imprimatur;
    }

    @JSON
    @Override
    public int getKuvitus() {
        return _kuvitus;
    }

    @Override
    public void setKuvitus(int kuvitus) {
        _kuvitus = kuvitus;
    }

    @JSON
    @Override
    public int getKartat() {
        return _kartat;
    }

    @Override
    public void setKartat(int kartat) {
        _kartat = kartat;
    }

    @JSON
    @Override
    public int getLiitteita() {
        return _liitteita;
    }

    @Override
    public void setLiitteita(int liitteita) {
        _liitteita = liitteita;
    }

    @JSON
    @Override
    public String getNimikirj() {
        if (_nimikirj == null) {
            return StringPool.BLANK;
        } else {
            return _nimikirj;
        }
    }

    @Override
    public void setNimikirj(String nimikirj) {
        _nimikirj = nimikirj;
    }

    @JSON
    @Override
    public int getSinetti() {
        return _sinetti;
    }

    @Override
    public void setSinetti(int sinetti) {
        _sinetti = sinetti;
    }

    @JSON
    @Override
    public int getLeima() {
        return _leima;
    }

    @Override
    public void setLeima(int leima) {
        _leima = leima;
    }

    @JSON
    @Override
    public int getExlibris() {
        return _exlibris;
    }

    @Override
    public void setExlibris(int exlibris) {
        _exlibris = exlibris;
    }

    @JSON
    @Override
    public int getHintamerk() {
        return _hintamerk;
    }

    @Override
    public void setHintamerk(int hintamerk) {
        _hintamerk = hintamerk;
    }

    @JSON
    @Override
    public String getOmiste() {
        if (_omiste == null) {
            return StringPool.BLANK;
        } else {
            return _omiste;
        }
    }

    @Override
    public void setOmiste(String omiste) {
        _omiste = omiste;
    }

    @JSON
    @Override
    public String getReunamerk() {
        if (_reunamerk == null) {
            return StringPool.BLANK;
        } else {
            return _reunamerk;
        }
    }

    @Override
    public void setReunamerk(String reunamerk) {
        _reunamerk = reunamerk;
    }

    @JSON
    @Override
    public String getLisatieto() {
        if (_lisatieto == null) {
            return StringPool.BLANK;
        } else {
            return _lisatieto;
        }
    }

    @Override
    public void setLisatieto(String lisatieto) {
        _lisatieto = lisatieto;
    }

    @JSON
    @Override
    public String getLahosoite() {
        if (_lahosoite == null) {
            return StringPool.BLANK;
        } else {
            return _lahosoite;
        }
    }

    @Override
    public void setLahosoite(String lahosoite) {
        _lahosoite = lahosoite;
    }

    @JSON
    @Override
    public String getLahemail() {
        if (_lahemail == null) {
            return StringPool.BLANK;
        } else {
            return _lahemail;
        }
    }

    @Override
    public void setLahemail(String lahemail) {
        _lahemail = lahemail;
    }

    @JSON
    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _columnBitmask |= STATUS_COLUMN_BITMASK;

        if (!_setOriginalStatus) {
            _setOriginalStatus = true;

            _originalStatus = _status;
        }

        _status = status;
    }

    public int getOriginalStatus() {
        return _originalStatus;
    }

    @JSON
    @Override
    public int getKieliid() {
        return _kieliid;
    }

    @Override
    public void setKieliid(int kieliid) {
        _kieliid = kieliid;
    }

    @JSON
    @Override
    public int getKielestaid() {
        return _kielestaid;
    }

    @Override
    public void setKielestaid(int kielestaid) {
        _kielestaid = kielestaid;
    }

    @JSON
    @Override
    public int getJulklajiid() {
        return _julklajiid;
    }

    @Override
    public void setJulklajiid(int julklajiid) {
        _julklajiid = julklajiid;
    }

    @JSON
    @Override
    public int getKuntoid() {
        return _kuntoid;
    }

    @Override
    public void setKuntoid(int kuntoid) {
        _kuntoid = kuntoid;
    }

    @JSON
    @Override
    public int getPuuteid() {
        return _puuteid;
    }

    @Override
    public void setPuuteid(int puuteid) {
        _puuteid = puuteid;
    }

    @JSON
    @Override
    public int getTeospkid() {
        return _teospkid;
    }

    @Override
    public void setTeospkid(int teospkid) {
        _teospkid = teospkid;
    }

    @JSON
    @Override
    public int getSidonta() {
        return _sidonta;
    }

    @Override
    public void setSidonta(int sidonta) {
        _sidonta = sidonta;
    }

    @JSON
    @Override
    public String getKokoelma() {
        if (_kokoelma == null) {
            return StringPool.BLANK;
        } else {
            return _kokoelma;
        }
    }

    @Override
    public void setKokoelma(String kokoelma) {
        _kokoelma = kokoelma;
    }

    @JSON
    @Override
    public Date getPoistettu() {
        return _poistettu;
    }

    @Override
    public void setPoistettu(Date poistettu) {
        _poistettu = poistettu;
    }

    @JSON
    @Override
    public Date getMuokattu() {
        return _muokattu;
    }

    @Override
    public void setMuokattu(Date muokattu) {
        _muokattu = muokattu;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public Vanhatkirjat toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Vanhatkirjat) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        VanhatkirjatImpl vanhatkirjatImpl = new VanhatkirjatImpl();

        vanhatkirjatImpl.setVkid(getVkid());
        vanhatkirjatImpl.setKuntaid(getKuntaid());
        vanhatkirjatImpl.setMaakuntaid(getMaakuntaid());
        vanhatkirjatImpl.setLomakenum(getLomakenum());
        vanhatkirjatImpl.setPaivays(getPaivays());
        vanhatkirjatImpl.setKartkohde(getKartkohde());
        vanhatkirjatImpl.setTekija(getTekija());
        vanhatkirjatImpl.setTeoknimi(getTeoknimi());
        vanhatkirjatImpl.setPainovuosi(getPainovuosi());
        vanhatkirjatImpl.setPainopaikka(getPainopaikka());
        vanhatkirjatImpl.setKirjapaino(getKirjapaino());
        vanhatkirjatImpl.setPainosmerk(getPainosmerk());
        vanhatkirjatImpl.setImprimatur(getImprimatur());
        vanhatkirjatImpl.setKuvitus(getKuvitus());
        vanhatkirjatImpl.setKartat(getKartat());
        vanhatkirjatImpl.setLiitteita(getLiitteita());
        vanhatkirjatImpl.setNimikirj(getNimikirj());
        vanhatkirjatImpl.setSinetti(getSinetti());
        vanhatkirjatImpl.setLeima(getLeima());
        vanhatkirjatImpl.setExlibris(getExlibris());
        vanhatkirjatImpl.setHintamerk(getHintamerk());
        vanhatkirjatImpl.setOmiste(getOmiste());
        vanhatkirjatImpl.setReunamerk(getReunamerk());
        vanhatkirjatImpl.setLisatieto(getLisatieto());
        vanhatkirjatImpl.setLahosoite(getLahosoite());
        vanhatkirjatImpl.setLahemail(getLahemail());
        vanhatkirjatImpl.setStatus(getStatus());
        vanhatkirjatImpl.setKieliid(getKieliid());
        vanhatkirjatImpl.setKielestaid(getKielestaid());
        vanhatkirjatImpl.setJulklajiid(getJulklajiid());
        vanhatkirjatImpl.setKuntoid(getKuntoid());
        vanhatkirjatImpl.setPuuteid(getPuuteid());
        vanhatkirjatImpl.setTeospkid(getTeospkid());
        vanhatkirjatImpl.setSidonta(getSidonta());
        vanhatkirjatImpl.setKokoelma(getKokoelma());
        vanhatkirjatImpl.setPoistettu(getPoistettu());
        vanhatkirjatImpl.setMuokattu(getMuokattu());

        vanhatkirjatImpl.resetOriginalValues();

        return vanhatkirjatImpl;
    }

    @Override
    public int compareTo(Vanhatkirjat vanhatkirjat) {
        int primaryKey = vanhatkirjat.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Vanhatkirjat)) {
            return false;
        }

        Vanhatkirjat vanhatkirjat = (Vanhatkirjat) obj;

        int primaryKey = vanhatkirjat.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        VanhatkirjatModelImpl vanhatkirjatModelImpl = this;

        vanhatkirjatModelImpl._originalTekija = vanhatkirjatModelImpl._tekija;

        vanhatkirjatModelImpl._originalTeoknimi = vanhatkirjatModelImpl._teoknimi;

        vanhatkirjatModelImpl._originalStatus = vanhatkirjatModelImpl._status;

        vanhatkirjatModelImpl._setOriginalStatus = false;

        vanhatkirjatModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Vanhatkirjat> toCacheModel() {
        VanhatkirjatCacheModel vanhatkirjatCacheModel = new VanhatkirjatCacheModel();

        vanhatkirjatCacheModel.vkid = getVkid();

        vanhatkirjatCacheModel.kuntaid = getKuntaid();

        vanhatkirjatCacheModel.maakuntaid = getMaakuntaid();

        vanhatkirjatCacheModel.lomakenum = getLomakenum();

        Date paivays = getPaivays();

        if (paivays != null) {
            vanhatkirjatCacheModel.paivays = paivays.getTime();
        } else {
            vanhatkirjatCacheModel.paivays = Long.MIN_VALUE;
        }

        vanhatkirjatCacheModel.kartkohde = getKartkohde();

        vanhatkirjatCacheModel.tekija = getTekija();

        String tekija = vanhatkirjatCacheModel.tekija;

        if ((tekija != null) && (tekija.length() == 0)) {
            vanhatkirjatCacheModel.tekija = null;
        }

        vanhatkirjatCacheModel.teoknimi = getTeoknimi();

        String teoknimi = vanhatkirjatCacheModel.teoknimi;

        if ((teoknimi != null) && (teoknimi.length() == 0)) {
            vanhatkirjatCacheModel.teoknimi = null;
        }

        vanhatkirjatCacheModel.painovuosi = getPainovuosi();

        vanhatkirjatCacheModel.painopaikka = getPainopaikka();

        String painopaikka = vanhatkirjatCacheModel.painopaikka;

        if ((painopaikka != null) && (painopaikka.length() == 0)) {
            vanhatkirjatCacheModel.painopaikka = null;
        }

        vanhatkirjatCacheModel.kirjapaino = getKirjapaino();

        String kirjapaino = vanhatkirjatCacheModel.kirjapaino;

        if ((kirjapaino != null) && (kirjapaino.length() == 0)) {
            vanhatkirjatCacheModel.kirjapaino = null;
        }

        vanhatkirjatCacheModel.painosmerk = getPainosmerk();

        vanhatkirjatCacheModel.imprimatur = getImprimatur();

        vanhatkirjatCacheModel.kuvitus = getKuvitus();

        vanhatkirjatCacheModel.kartat = getKartat();

        vanhatkirjatCacheModel.liitteita = getLiitteita();

        vanhatkirjatCacheModel.nimikirj = getNimikirj();

        String nimikirj = vanhatkirjatCacheModel.nimikirj;

        if ((nimikirj != null) && (nimikirj.length() == 0)) {
            vanhatkirjatCacheModel.nimikirj = null;
        }

        vanhatkirjatCacheModel.sinetti = getSinetti();

        vanhatkirjatCacheModel.leima = getLeima();

        vanhatkirjatCacheModel.exlibris = getExlibris();

        vanhatkirjatCacheModel.hintamerk = getHintamerk();

        vanhatkirjatCacheModel.omiste = getOmiste();

        String omiste = vanhatkirjatCacheModel.omiste;

        if ((omiste != null) && (omiste.length() == 0)) {
            vanhatkirjatCacheModel.omiste = null;
        }

        vanhatkirjatCacheModel.reunamerk = getReunamerk();

        String reunamerk = vanhatkirjatCacheModel.reunamerk;

        if ((reunamerk != null) && (reunamerk.length() == 0)) {
            vanhatkirjatCacheModel.reunamerk = null;
        }

        vanhatkirjatCacheModel.lisatieto = getLisatieto();

        String lisatieto = vanhatkirjatCacheModel.lisatieto;

        if ((lisatieto != null) && (lisatieto.length() == 0)) {
            vanhatkirjatCacheModel.lisatieto = null;
        }

        vanhatkirjatCacheModel.lahosoite = getLahosoite();

        String lahosoite = vanhatkirjatCacheModel.lahosoite;

        if ((lahosoite != null) && (lahosoite.length() == 0)) {
            vanhatkirjatCacheModel.lahosoite = null;
        }

        vanhatkirjatCacheModel.lahemail = getLahemail();

        String lahemail = vanhatkirjatCacheModel.lahemail;

        if ((lahemail != null) && (lahemail.length() == 0)) {
            vanhatkirjatCacheModel.lahemail = null;
        }

        vanhatkirjatCacheModel.status = getStatus();

        vanhatkirjatCacheModel.kieliid = getKieliid();

        vanhatkirjatCacheModel.kielestaid = getKielestaid();

        vanhatkirjatCacheModel.julklajiid = getJulklajiid();

        vanhatkirjatCacheModel.kuntoid = getKuntoid();

        vanhatkirjatCacheModel.puuteid = getPuuteid();

        vanhatkirjatCacheModel.teospkid = getTeospkid();

        vanhatkirjatCacheModel.sidonta = getSidonta();

        vanhatkirjatCacheModel.kokoelma = getKokoelma();

        String kokoelma = vanhatkirjatCacheModel.kokoelma;

        if ((kokoelma != null) && (kokoelma.length() == 0)) {
            vanhatkirjatCacheModel.kokoelma = null;
        }

        Date poistettu = getPoistettu();

        if (poistettu != null) {
            vanhatkirjatCacheModel.poistettu = poistettu.getTime();
        } else {
            vanhatkirjatCacheModel.poistettu = Long.MIN_VALUE;
        }

        Date muokattu = getMuokattu();

        if (muokattu != null) {
            vanhatkirjatCacheModel.muokattu = muokattu.getTime();
        } else {
            vanhatkirjatCacheModel.muokattu = Long.MIN_VALUE;
        }

        return vanhatkirjatCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(75);

        sb.append("{vkid=");
        sb.append(getVkid());
        sb.append(", kuntaid=");
        sb.append(getKuntaid());
        sb.append(", maakuntaid=");
        sb.append(getMaakuntaid());
        sb.append(", lomakenum=");
        sb.append(getLomakenum());
        sb.append(", paivays=");
        sb.append(getPaivays());
        sb.append(", kartkohde=");
        sb.append(getKartkohde());
        sb.append(", tekija=");
        sb.append(getTekija());
        sb.append(", teoknimi=");
        sb.append(getTeoknimi());
        sb.append(", painovuosi=");
        sb.append(getPainovuosi());
        sb.append(", painopaikka=");
        sb.append(getPainopaikka());
        sb.append(", kirjapaino=");
        sb.append(getKirjapaino());
        sb.append(", painosmerk=");
        sb.append(getPainosmerk());
        sb.append(", imprimatur=");
        sb.append(getImprimatur());
        sb.append(", kuvitus=");
        sb.append(getKuvitus());
        sb.append(", kartat=");
        sb.append(getKartat());
        sb.append(", liitteita=");
        sb.append(getLiitteita());
        sb.append(", nimikirj=");
        sb.append(getNimikirj());
        sb.append(", sinetti=");
        sb.append(getSinetti());
        sb.append(", leima=");
        sb.append(getLeima());
        sb.append(", exlibris=");
        sb.append(getExlibris());
        sb.append(", hintamerk=");
        sb.append(getHintamerk());
        sb.append(", omiste=");
        sb.append(getOmiste());
        sb.append(", reunamerk=");
        sb.append(getReunamerk());
        sb.append(", lisatieto=");
        sb.append(getLisatieto());
        sb.append(", lahosoite=");
        sb.append(getLahosoite());
        sb.append(", lahemail=");
        sb.append(getLahemail());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", kieliid=");
        sb.append(getKieliid());
        sb.append(", kielestaid=");
        sb.append(getKielestaid());
        sb.append(", julklajiid=");
        sb.append(getJulklajiid());
        sb.append(", kuntoid=");
        sb.append(getKuntoid());
        sb.append(", puuteid=");
        sb.append(getPuuteid());
        sb.append(", teospkid=");
        sb.append(getTeospkid());
        sb.append(", sidonta=");
        sb.append(getSidonta());
        sb.append(", kokoelma=");
        sb.append(getKokoelma());
        sb.append(", poistettu=");
        sb.append(getPoistettu());
        sb.append(", muokattu=");
        sb.append(getMuokattu());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(115);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.khl.db.model.Vanhatkirjat");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>vkid</column-name><column-value><![CDATA[");
        sb.append(getVkid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuntaid</column-name><column-value><![CDATA[");
        sb.append(getKuntaid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>maakuntaid</column-name><column-value><![CDATA[");
        sb.append(getMaakuntaid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lomakenum</column-name><column-value><![CDATA[");
        sb.append(getLomakenum());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>paivays</column-name><column-value><![CDATA[");
        sb.append(getPaivays());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kartkohde</column-name><column-value><![CDATA[");
        sb.append(getKartkohde());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tekija</column-name><column-value><![CDATA[");
        sb.append(getTekija());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>teoknimi</column-name><column-value><![CDATA[");
        sb.append(getTeoknimi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>painovuosi</column-name><column-value><![CDATA[");
        sb.append(getPainovuosi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>painopaikka</column-name><column-value><![CDATA[");
        sb.append(getPainopaikka());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kirjapaino</column-name><column-value><![CDATA[");
        sb.append(getKirjapaino());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>painosmerk</column-name><column-value><![CDATA[");
        sb.append(getPainosmerk());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>imprimatur</column-name><column-value><![CDATA[");
        sb.append(getImprimatur());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuvitus</column-name><column-value><![CDATA[");
        sb.append(getKuvitus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kartat</column-name><column-value><![CDATA[");
        sb.append(getKartat());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>liitteita</column-name><column-value><![CDATA[");
        sb.append(getLiitteita());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nimikirj</column-name><column-value><![CDATA[");
        sb.append(getNimikirj());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sinetti</column-name><column-value><![CDATA[");
        sb.append(getSinetti());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>leima</column-name><column-value><![CDATA[");
        sb.append(getLeima());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>exlibris</column-name><column-value><![CDATA[");
        sb.append(getExlibris());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hintamerk</column-name><column-value><![CDATA[");
        sb.append(getHintamerk());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>omiste</column-name><column-value><![CDATA[");
        sb.append(getOmiste());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>reunamerk</column-name><column-value><![CDATA[");
        sb.append(getReunamerk());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lisatieto</column-name><column-value><![CDATA[");
        sb.append(getLisatieto());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lahosoite</column-name><column-value><![CDATA[");
        sb.append(getLahosoite());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lahemail</column-name><column-value><![CDATA[");
        sb.append(getLahemail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kieliid</column-name><column-value><![CDATA[");
        sb.append(getKieliid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kielestaid</column-name><column-value><![CDATA[");
        sb.append(getKielestaid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>julklajiid</column-name><column-value><![CDATA[");
        sb.append(getJulklajiid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuntoid</column-name><column-value><![CDATA[");
        sb.append(getKuntoid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>puuteid</column-name><column-value><![CDATA[");
        sb.append(getPuuteid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>teospkid</column-name><column-value><![CDATA[");
        sb.append(getTeospkid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sidonta</column-name><column-value><![CDATA[");
        sb.append(getSidonta());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kokoelma</column-name><column-value><![CDATA[");
        sb.append(getKokoelma());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>poistettu</column-name><column-value><![CDATA[");
        sb.append(getPoistettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muokattu</column-name><column-value><![CDATA[");
        sb.append(getMuokattu());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
